# meta developer: @xdesai

from .. import loader, utils
from telethon.errors import UserNotParticipantError

@loader.tds
class CheckAdminRightsMod(loader.Module):
    strings_ru = {
        "change_info": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è",
        "delete_messages": "–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π",
        "ban_users": "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        "invite_users": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
        "pin_messages": "–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π",
        "post_stories": "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–π",
        "edit_stories": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
        "delete_stories": "–£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
        "manage_call": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è–º–∏",
        "anonymous": "–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å",
        "add_admins": "–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤",
        "manage_topics": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏",
        "post_messages": "–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è",
        "edit_messages": "–ò–∑–º–µ–Ω—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è",
        "loading": "<blockquote><emoji document_id=5355040476774815817>üï∞</emoji> <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</b></blockquote>",
        "not_a_chat": "<blockquote><emoji document_id=5312526098750252863>‚ùå</emoji> <b>–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.</b></blockquote>",
        "no_user": "<blockquote><emoji document_id=5312383351217201533>‚ö†Ô∏è</emoji> <b>–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b></blockquote>",
        "get_rights_header": "–ü—Ä–∞–≤–∞ <a href='tg://user?id={id}'>{name}</a> –≤ —ç—Ç–æ–º —á–∞—Ç–µ:",
        "not_admin": "<blockquote>‚ùå <a href='tg://user?id={id}'>{name}</a> –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</blockquote>\n"
    }

    strings = {
        "name": "CheckAdminRights",
        "change_info": "Change info",
        "delete_messages": "Delete messages",
        "ban_users": "Ban users",
        "invite_users": "Add members",
        "pin_messages": "Pin messages",
        "post_stories": "Post stories",
        "edit_stories": "Edit stories",
        "delete_stories": "Delete stories",
        "manage_call": "Manage call",
        "anonymous": "Anonymous",
        "add_admins": "Add admins",
        "manage_topics": "Manage topics",
        "post_messages": "Post messages",
        "edit_messages": "Edit messages",
        "loading": "<blockquote><emoji document_id=5355040476774815817>üï∞</emoji> <b>Processing data...</b></blockquote>",
        "admin_rights": "<emoji document_id=5818778798782420696>‚û°Ô∏è</emoji> <u>Admin rights:</u>\n",
        "get_rights_header": "<a href='tg://user?id={id}'>{name}</a>'s rights in this chat:",
        "not_admin": "<blockquote>‚ùå <a href='tg://user?id={id}'>{name}</a> is not an admin</blockquote>\n",
        "not_a_chat": "<blockquote><emoji document_id=5312526098750252863>‚ùå</emoji> <b>The command cannot be run in private messages.</b></blockquote>",
        "no_user": "<blockquote><emoji document_id=5312383351217201533>‚ö†Ô∏è</emoji> <b>You did not specify a user.</b></blockquote>",
    }
    @loader.command(
        ru_doc="<reply/username/id> | –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ."
    )
    async def rights(self, message):
        """<reply/username/id> | Check rights in the current chat."""
        if message.is_private:
            return await utils.answer(message, self.strings('not_a_chat'))
        await utils.answer(message, self.strings("loading"))
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()
        chat = await message.get_chat()
        chat_id = message.chat_id
        admin_rights_g = [
            "change_info",
            "delete_messages",
            "ban_users",
            "invite_users",
            "pin_messages",
            "post_stories",
            "edit_stories",
            "delete_stories",
            "manage_call",
            "anonymous",
            "add_admins",
            "manage_topics",
        ]
        admin_rights_c = [
            "change_info",
            "post_messages",
            "edit_messages",
            "delete_messages",
            "post_stories",
            "edit_stories",
            "delete_stories",
            "invite_users",
            "ban_users",
            "add_admins",
            "manage_call",
        ]
        if not args:
            if not reply:
                return await utils.answer(message, self.strings("no_user"))
            else:
                user = await reply.get_sender()
                permissions = await self.client.get_permissions(chat, user)
                if user is None:
                    return await utils.answer(message, self.strings("no_user"))
                header = self.strings('get_rights_header').format(id=user.id, name=f"{user.first_name or ''} {user.last_name or ''}")
                result = ""

                if permissions.has_default_permissions:
                    result += self.strings("not_admin").format(id=user.id, name=f"{user.first_name or ''} {user.last_name or ''}")
                else:
                    result += self.strings('admin_rights')
                    if message.is_channel and chat.broadcast:
                        for right in admin_rights_c:
                            has_permission = getattr(permissions, right, False)
                            result += f"{'<emoji document_id=5021905410089550576>‚úÖ</emoji>' if has_permission else '<emoji document_id=5019523782004441717>‚ùå</emoji>'} {self.strings(right)}\n"
                    else:
                        for right in admin_rights_g:
                            has_permission = getattr(permissions, right, False)
                            result += f"{'<emoji document_id=5021905410089550576>‚úÖ</emoji>' if has_permission else '<emoji document_id=5019523782004441717>‚ùå</emoji>'} {self.strings(right)}\n"

                await utils.answer(message, f"<blockquote><b>{header}</blockquote>\n\n<blockquote>{result}</b></blockquote>")
        else:
            args = utils.get_args_raw(message).split()
            user = await self.client.get_entity(int(args[0]) if args[0].isdigit() else args[0])
            try:
                permissions = await self.client.get_permissions(chat, user)
            except UserNotParticipantError:
                return await utils.answer(message, self.strings("no_user", message))
            if permissions.has_left:
                return await utils.answer(message, self.strings("no_user", message))

            header = self.strings('get_rights_header').format(id=user.id, name=f"{user.first_name or ''} {user.last_name or ''}")
            result = ""

            if permissions.has_default_permissions:
                result += self.strings("not_admin").format(id=user.id, name=f"{user.first_name or ''} {user.last_name or ''}")
            else:
                result += self.strings('admin_rights')
                if message.is_channel and chat.broadcast:
                    for right in admin_rights_c:
                        has_permission = getattr(permissions, right, False)
                        result += f"{'<emoji document_id=5021905410089550576>‚úÖ</emoji>' if has_permission else '<emoji document_id=5019523782004441717>‚ùå</emoji>'} {self.strings(right)}\n"
                else:
                    for right in admin_rights_g:
                            has_permission = getattr(permissions, right, False)
                            result += f"{'<emoji document_id=5021905410089550576>‚úÖ</emoji>' if has_permission else '<emoji document_id=5019523782004441717>‚ùå</emoji>'} {self.strings(right)}\n"

            await utils.answer(message, f"<blockquote><b>{header}</blockquote>\n\n<blockquote>{result}</b></blockquote>")
